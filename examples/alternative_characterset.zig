const std = @import("std");
pub usingnamespace @import("ncurses.zig");

pub fn main() anyerror!void {
    _ = try initscr();

    try addstrzig("Upper left corner           ");
    try addch(ACS_ULCORNER);
    try addstrzig("\n");
    try addstrzig("Lower left corner           ");
    try addch(ACS_LLCORNER);
    try addstrzig("\n");
    try addstrzig("Upper right corner          ");
    try addch(ACS_URCORNER);
    try addstrzig("\n");
    try addstrzig("Lower right corner          ");
    try addch(ACS_LRCORNER);
    try addstrzig("\n");
    try addstrzig("Tee pointing right          ");
    try addch(ACS_LTEE);
    try addstrzig("\n");
    try addstrzig("Tee pointing left           ");
    try addch(ACS_RTEE);
    try addstrzig("\n");
    try addstrzig("Tee pointing up             ");
    try addch(ACS_BTEE);
    try addstrzig("\n");
    try addstrzig("Tee pointing down           ");
    try addch(ACS_TTEE);
    try addstrzig("\n");
    try addstrzig("Horizontal line             ");
    try addch(ACS_HLINE);
    try addstrzig("\n");
    try addstrzig("Vertical line               ");
    try addch(ACS_VLINE);
    try addstrzig("\n");
    try addstrzig("Large Plus or cross over    ");
    try addch(ACS_PLUS);
    try addstrzig("\n");
    try addstrzig("Scan Line 1                 ");
    try addch(ACS_S1);
    try addstrzig("\n");
    try addstrzig("Scan Line 3                 ");
    try addch(ACS_S3);
    try addstrzig("\n");
    try addstrzig("Scan Line 7                 ");
    try addch(ACS_S7);
    try addstrzig("\n");
    try addstrzig("Scan Line 9                 ");
    try addch(ACS_S9);
    try addstrzig("\n");
    try addstrzig("Diamond                     ");
    try addch(ACS_DIAMOND);
    try addstrzig("\n");
    try addstrzig("Checker board (stipple)     ");
    try addch(ACS_CKBOARD);
    try addstrzig("\n");
    try addstrzig("Degree Symbol               ");
    try addch(ACS_DEGREE);
    try addstrzig("\n");
    try addstrzig("Plus/Minus Symbol           ");
    try addch(ACS_PLMINUS);
    try addstrzig("\n");
    try addstrzig("Bullet                      ");
    try addch(ACS_BULLET);
    try addstrzig("\n");
    try addstrzig("Arrow Pointing Left         ");
    try addch(ACS_LARROW);
    try addstrzig("\n");
    try addstrzig("Arrow Pointing Right        ");
    try addch(ACS_RARROW);
    try addstrzig("\n");
    try addstrzig("Arrow Pointing Down         ");
    try addch(ACS_DARROW);
    try addstrzig("\n");
    try addstrzig("Arrow Pointing Up           ");
    try addch(ACS_UARROW);
    try addstrzig("\n");
    try addstrzig("Board of squares            ");
    try addch(ACS_BOARD);
    try addstrzig("\n");
    try addstrzig("Lantern Symbol              ");
    try addch(ACS_LANTERN);
    try addstrzig("\n");
    try addstrzig("Solid Square Block          ");
    try addch(ACS_BLOCK);
    try addstrzig("\n");
    try addstrzig("Less/Equal sign             ");
    try addch(ACS_LEQUAL);
    try addstrzig("\n");
    try addstrzig("Greater/Equal sign          ");
    try addch(ACS_GEQUAL);
    try addstrzig("\n");
    try addstrzig("Pi                          ");
    try addch(ACS_PI);
    try addstrzig("\n");
    try addstrzig("Not equal                   ");
    try addch(ACS_NEQUAL);
    try addstrzig("\n");
    try addstrzig("UK pound sign               ");
    try addch(ACS_STERLING);
    try addstrzig("\n");

    try refresh();
    _ = try getch();
    try endwin();
}
